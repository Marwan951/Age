Question_1:

Development Environment:
- Language: C
- Compiler: [Insert your preferred C compiler]
- Operating System: [Specify your OS if relevant]

How to Compile and Run:
1. Open a terminal or command prompt.
2. Navigate to the directory containing the "fibonacci.c" file.
3. Compile the source code using the following command:
   [Specify the command for your compiler, e.g., gcc fibonacci.c -o fibonacci]
4. Run the executable by executing the following command:
   [Specify the command for running the compiled code, e.g., ./fibonacci]
5. The output will be displayed, showing the results for the "add", "mul", "sub", and "fibo" calculations.


Question_2:
Development Environment:
- Language: C
- Compiler: [Insert your preferred C compiler]
- Operating System: [Specify your OS if relevant]

How to Compile and Run:
1. Open a text editor and copy the source code for the desired method into a new file.
2. Save the file with a ".c" extension, for example, "fibonacci.c".
3. Open a terminal or command prompt.
4. Navigate to the directory where you saved the "fibonacci.c" file.
5. Compile the source code using the following command (replace "[compiler]" with your preferred C compiler command):
   [compiler] fibonacci.c -o fibonacci
6. Run the compiled program by executing the following command:
   ./fibonacci
7. The output will be displayed, showing the value of F(n) for the given input.



Question_3: 
Python PostgreSQL Driver - JSON Output

This Python driver connects to a PostgreSQL database and retrieves data from the "user_table" in JSON format.

Development Environment:
- Install Python (https://www.python.org/downloads/)
- Install the psycopg2 package: pip install psycopg2

Usage:
1. Update the "connection_params" dictionary in the source code with your PostgreSQL connection details.
2. Run the driver: python postgres_json.py

The output will be a JSON string containing the data retrieved from the "user_table".

Note: Make sure you have the PostgreSQL server running and the "user_table" exists with the provided data.


Question_4: 
The PostgreSQL JSON Driver is a project that provides an enhanced version of the PostgreSQL driver, available for multiple programming languages such as Go and Python. The driver allows for querying a PostgreSQL database and retrieving results in JSON string format. To set up the development environment, clone the repository and follow the language-specific instructions provided. Once installed, import the driver module, connect to the PostgreSQL database using the appropriate connection parameters, execute queries, and retrieve the results in JSON format.
Process and utilize the query results as needed in your application. Refer to the specific language instructions for detailed usage examples and customization.
